{"version":3,"sources":["Store/actions.js","Store/index.js","Store/selectors.js","Components/RestaurantsListPage/RestaurantsListPage.jsx","App.js","index.js"],"names":["ACTION_TYPES","composeEnhancers","window","__REACT_DEVTOOLS_EXTANTION_COMPOSE__","compose","middlewares","thunk","initialState","restaurantListData","store","createStore","state","arguments","length","undefined","action","type","_objectSpread","payload","applyMiddleware","apply","selectRestaurantsList","createSelector","_ref","feedItems","storesMap","map","_ref2","uuid","RestaurantsListPage","loadRestaurantsData","this","props","react_default","a","createElement","JSON","stringify","React","Component","putActionsToProps","dispatch","fetch","then","url","json","data","saveRestaurants","connect","App","es","className","Components_RestaurantsListPage_RestaurantsListPage","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"mOAAaA,EACO,+OCGpB,IAAMC,EAAmBC,OAAOC,sCAAwCC,IAClEC,EAAc,CAACC,KAEfC,EAAe,CACnBC,mBAAoB,MAgBTC,EAAQC,YAbL,WAAkC,IAAjCC,EAAiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBL,EAAcQ,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAChD,OAAQC,EAAOC,MACb,KAAKhB,EACH,4VAAAiB,CAAA,GACKN,EADL,CAEEH,mBAAoBO,EAAOG,UAG/B,QACE,OAAOP,IAMXV,EAAiBkB,IAAeC,WAAf,EAAmBf,qDCtBzBgB,EAAwBC,YAFhB,SAAAX,GAAK,OAAIA,GAI5B,SAAAY,GAA4B,IAAzBf,EAAyBe,EAAzBf,mBACD,IAAKA,EACH,MAAO,GAFiB,IAKlBgB,EAAyBhB,EAAzBgB,UAAWC,EAAcjB,EAAdiB,UAEnB,OAAOD,EAAUE,IAAI,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OAAcH,EAAUG,OCR3CC,+LAIFC,EAFgCC,KAAKC,MAA7BF,wDAKD,IACCtB,EAAuBuB,KAAKC,MAA5BxB,mBAER,OACEyB,EAAAC,EAAAC,cAAA,WAAMC,KAAKC,UAAU7B,WAXO8B,IAAMC,WAoBlCC,EAAoB,CACxBV,oBHjB6B,kBAAK,SAACW,GACnCC,MAAM,+DACHC,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAApB,GAAc,IAAXuB,EAAWvB,EAAXuB,KACPL,EATkB,SAAAK,GAAI,MAAK,CAC/B9B,KAAMhB,EACNkB,QAAS4B,GAOIC,CAAgBD,SGgBhBE,cARS,SAAArC,GAAK,MAAK,CAChCH,mBAAoBa,EAAsBV,KAS1C6B,EAFaQ,CAGbnB,GClBaoB,EARH,kBACVhB,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAUzC,MAAOA,GACfwB,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,QACblB,EAAAC,EAAAC,cAACiB,EAAD,SCLNC,IAASC,OAAOrB,EAAAC,EAAAC,cAACoB,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.233eee7b.chunk.js","sourcesContent":["export const ACTION_TYPES = {\n  SAVE_RESTAURANTS: 'SAVE_RESTAURANTS',\n};\n\nconst saveRestaurants = data => ({\n  type: ACTION_TYPES.SAVE_RESTAURANTS,\n  payload: data,\n});\n\nexport const loadRestaurants = () =>(dispatch) => {\n  fetch('https://mate-uber-eats-api.herokuapp.com/api/v1/restaurants')\n    .then(url => url.json())\n    .then(({ data }) => {\n      dispatch(saveRestaurants(data));\n    });\n};\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { ACTION_TYPES } from './actions'\n\nconst composeEnhancers = window.__REACT_DEVTOOLS_EXTANTION_COMPOSE__ || compose;\nconst middlewares = [thunk];\n\nconst initialState = {\n  restaurantListData: null,\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ACTION_TYPES.SAVE_RESTAURANTS:\n      return {\n        ...state,\n        restaurantListData: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const store = createStore(\n  reducer,\n  composeEnhancers(applyMiddleware(...middlewares))\n);\n","import { createSelector } from 'reselect';\n\nconst rootSelector = state => state;\n\nexport const selectRestaurantsList = createSelector(\n  rootSelector,\n  ({ restaurantListData }) => {\n    if (!restaurantListData) {\n      return [];\n    };\n\n    const { feedItems, storesMap } = restaurantListData;\n\n    return feedItems.map(({ uuid }) => storesMap[uuid]);\n  },\n);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { loadRestaurants } from '../../Store/actions';\nimport { selectRestaurantsList } from '../../Store/selectors';\n\nclass RestaurantsListPage extends React.Component {\n  componentDidMount() {\n    const { loadRestaurantsData } = this.props;\n\n    loadRestaurantsData();\n  }\n\n  render() {\n    const { restaurantListData } = this.props;\n\n    return (\n      <div>{JSON.stringify(restaurantListData)}</div>\n    );\n  }\n}\n\nconst putStateToProps = state => ({\n  restaurantListData: selectRestaurantsList(state),\n});\n\nconst putActionsToProps = {\n  loadRestaurantsData: loadRestaurants,\n};\n\nexport default connect(\n  putStateToProps,\n  putActionsToProps\n)(RestaurantsListPage);\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport './App.css';\nimport { store } from './Store/index';\nimport RestaurantsListPage from './Components/RestaurantsListPage/RestaurantsListPage';\n\nconst App = () => (\n  <Provider store={store}>\n    <div className=\"page\">\n      <RestaurantsListPage />\n    </div>\n  </Provider>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}